# depth_multiple: 0.33  # model depth multiple
# width_multiple: 0.50  # layer channel multiple
depth_multiple: 1.0  # model depth multiple
width_multiple: 1.0  # layer channel multiple

# YOLOv5 backbone
backbone:
  # [from, number, module, args]
  [[-1, 1, Conv, [64, 6, 2, 2]],  # 0-P1/2
   [-1, 1, Conv, [128, 3, 2]],  # 1-P2/4
   [-1, 3, C3, [128]],
   [-1, 1, Conv, [256, 3, 2]],  # 3-P3/8
   [-1, 6, C3, [256]],
   [-1, 1, Conv, [512, 3, 2]],  # 5-P4/16
   [-1, 9, C3, [512]],
   [-1, 1, Conv, [1024, 3, 2]],  # 7-P5/32
   [-1, 3, C3, [1024]],
   [-1, 1, SPPF, [1024, 5]],  # 9
  ]

# YOLOX_OBB head
head:
  [[-1, 1, ConvN, [256, 1, 1, "kwargs(init_func=caffe2_xavier_init)"]], # 10 / x
   [-1, 1, PPM, [256, [1, 2, 3, 6]]], # 11
   [-1, 1, ConvN, [256, 3, 1]], # 12 / x
   [-1, 1, nn.Upsample, [None, 2, 'nearest']], # 13
   [12, 1, nn.Upsample, [None, 4, 'nearest']], # 14

   [6, 1, ConvN, [256, 1, 1, "kwargs(init_func=caffe2_xavier_init)"]], # 15 / x
   [[-1, 13], 1, Sum, [1]],  # 16
   [-1, 1, ConvN, [256, 3, 1, "kwargs(init_func=caffe2_xavier_init)"]], # 17 / x
   [-1, 1, nn.Upsample, [None, 2, 'nearest']], # 18
   [17, 1, nn.Upsample, [None, 2, 'nearest']], # 19

   [4, 1, ConvN, [256, 1, 1, "kwargs(init_func=caffe2_xavier_init)"]], # 20 / x
   [[-1, 18], 1, Sum, [1]],  # 21
   [-1, 1, ConvN, [256, 3, 1, "kwargs(init_func=caffe2_xavier_init)"]], # 22 / x

   [[-1, 19, 14], 1, Concat, [1]], # 23
   [-1, 1, ConvN, [256, 3, 1, "kwargs(init_func=caffe2_msra_init)"]], # 24 / m fusion
   # sparse decoder
   # inst branch
   [-1, 1, Coordinates, [absolute]], # 25
   [-1, 1, InstConv, [256, 4, 3, 1, 1, "kwargs(init_func=caffe2_msra_init, act_func=nn.ReLU, inplace=True)"]], # 26 / m
   # mask branch
   [25, 1, InstConv, [256, 4, 3, 1, 1, "kwargs(init_func=caffe2_msra_init, act_func=nn.ReLU, inplace=True)"]], # 27 / m
   [-1, 1, ConvN, [128, 1, 1]], # 28 / m
  ]

detect:
  [[[-1, 26], 1, SparseInstDetect, []]] # Detect(P3, P4, P5)